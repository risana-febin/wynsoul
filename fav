import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:project/place.dart';

import 'package:project/placedlt.dart';
import 'package:shared_preferences/shared_preferences.dart';

class Fav extends StatefulWidget {
  final List<Map<String, dynamic>> favorites;
  const Fav({super.key, required this.favorites});

  @override
  State<Fav> createState() => _FavState();
}

class _FavState extends State<Fav> {
  late List<Map<String, dynamic>> favList;

  @override
  void initState() {
    super.initState();
    favList = List.from(widget.favorites);
  }

  void saveFav() async {
    final prefs = await SharedPreferences.getInstance();
    prefs.setString('favorites', jsonEncode(favList));
  }

  void removeFav(Map<String, dynamic> place) {
    setState(() {
      favList.removeWhere((item) => item['name'] == place['name']);
    });
    saveFav();

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('${place['name']} removed from favorites 💔'),
        duration: const Duration(seconds: 1),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          onPressed: () {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (_) => const Place()),
            );
          },
          icon: const Icon(Icons.arrow_back),
        ),
        title: Text(
          "Favourites 💖",
          style: GoogleFonts.poppins(fontWeight: FontWeight.w600),
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // 💬 Info Text
          Padding(
            padding: const EdgeInsets.all(16),
            child: Text(
              "Keep your favorite destinations here 🌍",
              style: GoogleFonts.poppins(
                fontSize: 15,
                color: const Color.fromARGB(255, 120, 120, 120),
              ),
            ),
          ),
          Expanded(
            child: favList.isEmpty
                ? Center(
                    child: Text(
                      "No favourites yet!\nStart adding your dream places 💫",
                      textAlign: TextAlign.center,
                      style: GoogleFonts.poppins(
                        fontSize: 16,
                        color: Colors.grey,
                      ),
                    ),
                  )
                : GridView.builder(
                    padding: const EdgeInsets.all(10),
                    gridDelegate:
                        const SliverGridDelegateWithFixedCrossAxisCount(
                          crossAxisCount: 2,
                          mainAxisSpacing: 10,
                          crossAxisSpacing: 10,
                          childAspectRatio: 0.75,
                        ),
                    itemCount: favList.length,
                    itemBuilder: (context, index) {
                      final place = favList[index];

                      return Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                        elevation: 4,
                        child: Stack(
                          children: [
                            ClipRRect(
                              borderRadius: BorderRadius.circular(12),
                              child: Image.network(
                                place['image'] ??
                                    'https://via.placeholder.com/150',
                                fit: BoxFit.cover,
                                width: double.infinity,
                                height: double.infinity,
                              ),
                            ),
                            Align(
                              alignment: Alignment.bottomCenter,
                              child: Container(
                                decoration: const BoxDecoration(
                                  gradient: LinearGradient(
                                    begin: Alignment.topCenter,
                                    end: Alignment.bottomCenter,
                                    colors: [
                                      Colors.transparent,
                                      Colors.black54,
                                    ],
                                  ),
                                ),
                                child: Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Column(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      Text(
                                        place['name'] ?? 'Unknown',
                                        style: const TextStyle(
                                          color: Colors.white,
                                          fontWeight: FontWeight.bold,
                                          fontSize: 16,
                                        ),
                                        textAlign: TextAlign.center,
                                      ),
                                      const SizedBox(height: 6),
                                      ElevatedButton(
                                        onPressed: () {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (_) =>
                                                  Details(place: place),
                                            ),
                                          );
                                        },
                                        style: ElevatedButton.styleFrom(
                                          backgroundColor: Colors.white,
                                          shape: RoundedRectangleBorder(
                                            borderRadius: BorderRadius.circular(
                                              10,
                                            ),
                                          ),
                                        ),
                                        child: const Text('View Details'),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            Positioned(
                              top: 8,
                              right: 8,
                              child: GestureDetector(
                                onTap: () => removeFav(place),
                                child: const Icon(
                                  Icons.favorite,
                                  color: Colors.red,
                                  size: 26,
                                ),
                              ),
                            ),
                          ],
                        ),
                      );
                    },
                  ),
          ),
        ],
      ),
    );
  }
}
