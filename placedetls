import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

class Details extends StatefulWidget {
  final Map<String, dynamic> place;
  const Details({super.key, required this.place});

  @override
  State<Details> createState() => _DetailsState();
}

class _DetailsState extends State<Details> {
  void _launchPhn(String phone) async {
    if (phone.isEmpty) return;
    final url = Uri.parse('tel:$phone');
    if (await canLaunchUrl(url)) {
      await launchUrl(url);
    } else {
      throw 'Could not call $phone';
    }
  }

  void _launchLink(String link) async {
    if (link.isEmpty) return;
    final url = Uri.parse(link);
    if (await canLaunchUrl(url)) {
      await launchUrl(url, mode: LaunchMode.externalApplication);
    } else {
      throw 'Could not open $link';
    }
  }

  void showImagePopup(String imageUrl) {
    if (imageUrl.isEmpty) return;
    showDialog(
      context: context,
      builder: (_) => Dialog(
        backgroundColor: Colors.transparent,
        child: GestureDetector(
          onTap: () => Navigator.pop(context),
          child: InteractiveViewer(
            panEnabled: true,
            minScale: 1,
            maxScale: 5,
            child: Image.network(imageUrl, fit: BoxFit.contain),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final List<String> images =
        (widget.place['images'] as List<dynamic>?)?.cast<String>() ?? [];
    final List<String> allImages = [
      if (widget.place['image'] != null) widget.place['image'],
      ...images,
    ].cast<String>();

    return Scaffold(
      appBar: AppBar(
        title: Text(widget.place['name'] ?? 'Details'),
        backgroundColor: Colors.white,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(12),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
        
            if (allImages.isNotEmpty)
              GestureDetector(
                onTap: () => showImagePopup(allImages[0]),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(12),
                  child: Image.network(
                    allImages[0],
                    height: 250,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),

            const SizedBox(height: 10),

      
            if (allImages.length > 1)
              SizedBox(
                height: 100,
                child: ListView.builder(
                  scrollDirection: Axis.horizontal,
                  itemCount: allImages.length - 1,
                  itemBuilder: (context, index) {
                    final img = allImages[index + 1];
                    return GestureDetector(
                      onTap: () => showImagePopup(img),
                      child: Container(
                        margin: const EdgeInsets.symmetric(horizontal: 6),
                        width: 120,
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(10),
                          image: DecorationImage(
                            image: NetworkImage(img),
                            fit: BoxFit.cover,
                          ),
                        ),
                      ),
                    );
                  },
                ),
              ),

            const SizedBox(height: 16),

        
            Text(
              widget.place['name'] ?? 'N/A',
              style: const TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
            ),

            const SizedBox(height: 8),

          
            Text(
              'Ticket: ${widget.place['Ticket'] ?? 'N/A'}',
              style: const TextStyle(fontSize: 16),
            ),

            const SizedBox(height: 4),

          
            Text(
              'Timing: ${widget.place['Timing'] ?? 'N/A'}',
              style: const TextStyle(fontSize: 16),
            ),

            const SizedBox(height: 4),

          
            GestureDetector(
              onTap: () => _launchPhn(widget.place['phone'] ?? ''),
              child: Text(
                'Phone: ${widget.place['phone'] ?? 'N/A'}',
                style: const TextStyle(
                  fontSize: 16,
                  color: Colors.blue,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),

            const SizedBox(height: 4),

           
            GestureDetector(
              onTap: () => _launchLink(widget.place['link'] ?? ''),
              child: const Text(
                'Location',
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.blue,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),

            const SizedBox(height: 20),
          ],
        ),
      ),
    );
  }
}
