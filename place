import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'dart:convert';

import 'package:project/fav.dart';
import 'package:project/mainpage.dart';
import './place1.dart';
import './place3.dart';
import './place4.dart';
import './placedlt.dart';

final List<Map<String, dynamic>> places = [...places1, ...places3, ...places4];

class Place extends StatefulWidget {
  const Place({super.key});

  @override
  State<Place> createState() => _PlaceState();
}

class _PlaceState extends State<Place> {
  final TextEditingController _searchController = TextEditingController();
  List<Map<String, dynamic>> favorites = [];
  String searchText = "";
  String selectedCategory = 'All';

  @override
  void initState() {
    super.initState();
    loadFav();
  }

  void loadFav() async {
    final prefs = await SharedPreferences.getInstance();
    final favString = prefs.getString('favorites');
    if (favString != null) {
      final List decoded = jsonDecode(favString);
      favorites = decoded
          .map<Map<String, dynamic>>((item) => Map<String, dynamic>.from(item))
          .toList();
      setState(() {});
    }
  }

  void toggleFav(Map<String, dynamic> place) async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      if (isFavorite(place)) {
        favorites.removeWhere((item) => item['name'] == place['name']);
      } else {
        favorites.add(place);
      }
    });
    prefs.setString('favorites', jsonEncode(favorites));
  }

  bool isFavorite(Map<String, dynamic> place) {
    return favorites.any((item) => item['name'] == place['name']);
  }

  Widget buildCategoryCard(String name, String imageUrl) {
    final bool isSelected = selectedCategory == name;

    return GestureDetector(
      onTap: () {
        setState(() {
          selectedCategory = name;
        });
      },
      child: Container(
        width: 80,
        margin: const EdgeInsets.symmetric(horizontal: 8),
        child: Column(
          children: [
            Container(
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                border: Border.all(
                  color: isSelected ? Colors.green : Colors.transparent,
                  width: 3,
                ),
              ),
              child: CircleAvatar(
                radius: 30,
                backgroundImage: NetworkImage(imageUrl),
              ),
            ),
            const SizedBox(height: 6),
            Text(
              name,
              style: TextStyle(
                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final filteredPlaces = places.where((place) {
      final matchesSearch = place['name'].toString().toLowerCase().contains(
        searchText.toLowerCase(),
      );
      final matchesCategory =
          selectedCategory == 'All' ||
          (place['category']?.toString().toLowerCase() ==
              selectedCategory.toLowerCase());
      return matchesSearch && matchesCategory;
    }).toList();

    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          onPressed: () {
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(builder: (_) => MainScreen(initialIndex: 0)),
            );
          },
          icon: const Icon(Icons.arrow_back),
        ),
        backgroundColor: Colors.white,
        title: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              "Tourist Places",
              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
            ),
            const SizedBox(height: 4),
            Container(
              height: 38,
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.15),
                borderRadius: BorderRadius.circular(8),
              ),
              child: TextField(
                controller: _searchController,
                decoration: const InputDecoration(
                  hintText: 'Search places...',
                  border: InputBorder.none,
                  prefixIcon: Icon(Icons.search, color: Colors.black),
                  contentPadding: EdgeInsets.symmetric(vertical: 10),
                ),
                onChanged: (value) {
                  setState(() {
                    searchText = value;
                  });
                },
              ),
            ),
          ],
        ),
        toolbarHeight: 100,
        actions: [
          IconButton(
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (_) => Fav(favorites: favorites)),
              );
            },
            icon: const Icon(Icons.favorite, color: Colors.red),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [
            SizedBox(
              height: 100,
              child: ListView(
                scrollDirection: Axis.horizontal,
                children: [
                  buildCategoryCard(
                    'All',
                    'https://thumbs.dreamstime.com/b/eco-tourism-logo-vector-summer-nature-landscape-map-pin-117696897.jpg',
                  ),
                  buildCategoryCard(
                    'Waterfall',
                    'https://cdn.tripuntold.com/media/photos/location/2018/10/30/6dc13c99-3b31-4ee4-b977-cd95fa0cc92b.jpg',
                  ),
                  buildCategoryCard(
                    'Hill',
                    'https://images.pexels.com/photos/761505/pexels-photo-761505.jpeg',
                  ),
                  buildCategoryCard(
                    'Park',
                    'https://www.keralatourism.org/images/eco-tourism.jpg',
                  ),
                  buildCategoryCard(
                    'Dam',
                    'https://africa-energy-portal.org/sites/default/files/2024-05/hydro%201.jpg',
                  ),
                  buildCategoryCard(
                    'Forest',
                    'https://media.springernature.com/lw1200/springer-static/image/art%3A10.1038%2Fs41477-019-0374-3/MediaObjects/41477_2019_374_Figa_HTML.jpg',
                  ),
                ],
              ),
            ),
            Expanded(
              child: GridView.builder(
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  crossAxisSpacing: 8,
                  mainAxisSpacing: 8,
                  childAspectRatio: 0.75,
                ),
                itemCount: filteredPlaces.length,
                itemBuilder: (context, index) {
                  final place = filteredPlaces[index];
                  final fav = isFavorite(place);

                  return Card(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15),
                    ),
                    elevation: 4,
                    child: Stack(
                      children: [
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.stretch,
                          children: [
                            Expanded(
                              child: ClipRRect(
                                borderRadius: const BorderRadius.vertical(
                                  top: Radius.circular(15),
                                ),
                                child: Image.network(
                                  place['image'] ??
                                      'https://via.placeholder.com/150',
                                  fit: BoxFit.cover,
                                ),
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Text(
                                place['name'] ?? 'Unknown',
                                style: const TextStyle(
                                  fontWeight: FontWeight.bold,
                                  fontSize: 16,
                                ),
                                textAlign: TextAlign.center,
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.symmetric(
                                horizontal: 8.0,
                              ),
                              child: ElevatedButton(
                                onPressed: () {
                                  Navigator.push(
                                    context,
                                    MaterialPageRoute(
                                      builder: (_) => Details(place: place),
                                    ),
                                  );
                                },
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Colors.white,
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                ),
                                child: const Text('View Details'),
                              ),
                            ),
                            const SizedBox(height: 8),
                          ],
                        ),
                        Positioned(
                          top: 8,
                          right: 8,
                          child: GestureDetector(
                            onTap: () => toggleFav(place),
                            child: Icon(
                              fav ? Icons.favorite : Icons.favorite_border,
                              color: fav ? Colors.red : Colors.grey,
                              size: 25,
                            ),
                          ),
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
